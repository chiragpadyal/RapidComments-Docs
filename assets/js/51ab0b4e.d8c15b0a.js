"use strict";(self.webpackChunkrapid_comments_docs=self.webpackChunkrapid_comments_docs||[]).push([[430],{36004:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>m,default:()=>k,frontMatter:()=>p,metadata:()=>u,toc:()=>h});var a=r(87462),s=(r(67294),r(3905)),l=r(70603),o=r(48147),i=r(61045),n=(r(86776),r(69128),r(83329)),c=(r(3186),r(18679));const p={id:"fetch-all-roles-for-a-user",title:"Fetch All Roles for a User",description:"Get all roles for a user",sidebar_label:"Fetch All Roles for a User",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Auth0 Service"],description:"Get all roles for a user",operationId:"Fetch All Roles for a User",parameters:[{name:"userId",in:"path",required:!0,schema:{type:"string"}}],responses:{200:{description:"OK",content:{"*/*":{schema:{type:"string"}}}}},security:[{security:["admin"]}],method:"get",path:"/api/admin/users/role/{userId}",servers:[{url:"http://localhost:8060",description:"Generated server url"}],securitySchemes:{security:{type:"http",scheme:"bearer",bearerFormat:"JWT"},"no security":{}},info:{title:"Comment Service API Reference",description:"Documentation Comment Service API v1.0",version:"1.0"},postman:{name:"Fetch All Roles for a User",description:{content:"Get all roles for a user",type:"text/plain"},url:{path:["api","admin","users","role",":userId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"userId"}]},header:[{key:"Accept",value:"*/*"}],method:"GET",auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"get api-method",info_path:"api-reference/comment-service-api-reference",custom_edit_url:null},m=void 0,u={unversionedId:"api-reference/fetch-all-roles-for-a-user",id:"api-reference/fetch-all-roles-for-a-user",title:"Fetch All Roles for a User",description:"Get all roles for a user",source:"@site/docs/api-reference/fetch-all-roles-for-a-user.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/fetch-all-roles-for-a-user",permalink:"/RapidComments-Docs/api-reference/fetch-all-roles-for-a-user",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"fetch-all-roles-for-a-user",title:"Fetch All Roles for a User",description:"Get all roles for a user",sidebar_label:"Fetch All Roles for a User",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Auth0 Service"],description:"Get all roles for a user",operationId:"Fetch All Roles for a User",parameters:[{name:"userId",in:"path",required:!0,schema:{type:"string"}}],responses:{200:{description:"OK",content:{"*/*":{schema:{type:"string"}}}}},security:[{security:["admin"]}],method:"get",path:"/api/admin/users/role/{userId}",servers:[{url:"http://localhost:8060",description:"Generated server url"}],securitySchemes:{security:{type:"http",scheme:"bearer",bearerFormat:"JWT"},"no security":{}},info:{title:"Comment Service API Reference",description:"Documentation Comment Service API v1.0",version:"1.0"},postman:{name:"Fetch All Roles for a User",description:{content:"Get all roles for a user",type:"text/plain"},url:{path:["api","admin","users","role",":userId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"userId"}]},header:[{key:"Accept",value:"*/*"}],method:"GET",auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"get api-method",info_path:"api-reference/comment-service-api-reference",custom_edit_url:null},sidebar:"doc",previous:{title:"Delete Role for a User",permalink:"/RapidComments-Docs/api-reference/delete-role-for-a-user"},next:{title:"Populate Users",permalink:"/RapidComments-Docs/api-reference/populate-users"}},d={},h=[{value:"Fetch All Roles for a User",id:"fetch-all-roles-for-a-user",level:2}],f={toc:h},y="wrapper";function k(e){let{components:t,...r}=e;return(0,s.kt)(y,(0,a.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"fetch-all-roles-for-a-user"},"Fetch All Roles for a User"),(0,s.kt)("p",null,"Get all roles for a user"),(0,s.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(i.Z,{className:"paramsItem",param:{name:"userId",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)(l.Z,{mdxType:"ApiTabs"},(0,s.kt)(c.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"OK")),(0,s.kt)("div",null,(0,s.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(c.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,s.kt)(n.Z,{mdxType:"SchemaTabs"},(0,s.kt)(c.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{textAlign:"left"}},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem",marginLeft:"1rem"}},(0,s.kt)("p",null,"string")))))))))))))}k.isMDXComponent=!0}}]);