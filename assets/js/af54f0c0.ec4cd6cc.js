"use strict";(self.webpackChunkrapid_comments_docs=self.webpackChunkrapid_comments_docs||[]).push([[558],{28291:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>f,frontMatter:()=>l,metadata:()=>h,toc:()=>y});var n=a(87462),r=(a(67294),a(3905)),s=a(70603),i=a(48147),m=a(61045),o=a(86776),p=(a(69128),a(83329)),c=(a(3186),a(18679));const l={id:"fetch-comments-page",title:"Fetch Comments Page",description:"Get comments page wise for a thread (Token is Optional)",sidebar_label:"Fetch Comments Page",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Comment Endpoint"],description:"Get comments page wise for a thread (Token is Optional)",operationId:"Fetch Comments Page",parameters:[{name:"threadId",in:"path",required:!0,schema:{type:"string"}},{name:"page",in:"path",required:!0,schema:{type:"integer",format:"int32"}}],responses:{200:{description:"OK",content:{"*/*":{schema:{type:"object"}}}}},security:[{"no security":{}},{security:{}}],method:"get",path:"/api/comment-service/threads/{threadId}/comments/{page}",servers:[{url:"http://localhost:8060",description:"Generated server url"}],securitySchemes:{security:{type:"http",scheme:"bearer",bearerFormat:"JWT"},"no security":{}},info:{title:"Comment Service API Reference",description:"Documentation Comment Service API v1.0",version:"1.0"},postman:{name:"Fetch Comments Page",description:{content:"Get comments page wise for a thread (Token is Optional)",type:"text/plain"},url:{path:["api","comment-service","threads",":threadId","comments",":page"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"threadId"},{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"page"}]},header:[{key:"Accept",value:"*/*"}],method:"GET",auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"get api-method",info_path:"api-reference/comment-service-api-reference",custom_edit_url:null},d=void 0,h={unversionedId:"api-reference/fetch-comments-page",id:"api-reference/fetch-comments-page",title:"Fetch Comments Page",description:"Get comments page wise for a thread (Token is Optional)",source:"@site/docs/api-reference/fetch-comments-page.api.mdx",sourceDirName:"api-reference",slug:"/api-reference/fetch-comments-page",permalink:"/RapidComments-Docs/api-reference/fetch-comments-page",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"fetch-comments-page",title:"Fetch Comments Page",description:"Get comments page wise for a thread (Token is Optional)",sidebar_label:"Fetch Comments Page",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Comment Endpoint"],description:"Get comments page wise for a thread (Token is Optional)",operationId:"Fetch Comments Page",parameters:[{name:"threadId",in:"path",required:!0,schema:{type:"string"}},{name:"page",in:"path",required:!0,schema:{type:"integer",format:"int32"}}],responses:{200:{description:"OK",content:{"*/*":{schema:{type:"object"}}}}},security:[{"no security":{}},{security:{}}],method:"get",path:"/api/comment-service/threads/{threadId}/comments/{page}",servers:[{url:"http://localhost:8060",description:"Generated server url"}],securitySchemes:{security:{type:"http",scheme:"bearer",bearerFormat:"JWT"},"no security":{}},info:{title:"Comment Service API Reference",description:"Documentation Comment Service API v1.0",version:"1.0"},postman:{name:"Fetch Comments Page",description:{content:"Get comments page wise for a thread (Token is Optional)",type:"text/plain"},url:{path:["api","comment-service","threads",":threadId","comments",":page"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"threadId"},{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"page"}]},header:[{key:"Accept",value:"*/*"}],method:"GET",auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"get api-method",info_path:"api-reference/comment-service-api-reference",custom_edit_url:null},sidebar:"doc",previous:{title:"Delete Comment",permalink:"/RapidComments-Docs/api-reference/delete-comment"},next:{title:"Fetch Replies",permalink:"/RapidComments-Docs/api-reference/fetch-replies"}},u={},y=[{value:"Fetch Comments Page",id:"fetch-comments-page",level:2}],g={toc:y},k="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"fetch-comments-page"},"Fetch Comments Page"),(0,r.kt)("p",null,"Get comments page wise for a thread (Token is Optional)"),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Path Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(m.Z,{className:"paramsItem",param:{name:"threadId",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(m.Z,{className:"paramsItem",param:{name:"page",in:"path",required:!0,schema:{type:"integer",format:"int32"}},mdxType:"ParamsItem"})))),(0,r.kt)("div",null,(0,r.kt)(s.Z,{mdxType:"ApiTabs"},(0,r.kt)(c.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"OK")),(0,r.kt)("div",null,(0,r.kt)(i.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(c.Z,{label:"*/*",value:"*/*",mdxType:"TabItem"},(0,r.kt)(p.Z,{mdxType:"SchemaTabs"},(0,r.kt)(c.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem",marginLeft:"1rem"}},(0,r.kt)("p",null,"object"))))),(0,r.kt)(c.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(o.Z,{responseExample:"{}",language:"json",mdxType:"ResponseSamples"}))))))))))}f.isMDXComponent=!0}}]);